<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mongocxx-v3s on MongoDB C&#43;&#43; Driver Manual</title>
    <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/</link>
    <description>Recent content in Mongocxx-v3s on MongoDB C&#43;&#43; Driver Manual</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Apr 2017 13:39:39 -0400</lastBuildDate>
    
	<atom:link href="https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Connection pools</title>
      <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/connection-pools/</link>
      <pubDate>Tue, 18 Apr 2017 13:39:39 -0400</pubDate>
      
      <guid>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/connection-pools/</guid>
      <description>mongocxx::client vs mongocxx::pool A standalone mongocxx::client uses a single-threaded algorithm to monitor the state of the cluster it&amp;rsquo;s connected to. When connected to a replica set, the thread &amp;ldquo;stops the world&amp;rdquo; every 60 seconds to check the status of the cluster. A mongocxx::pool, on the other hand, uses a separate background thread for each server in the cluster, each of which checks the status of the server it monitors every 10 seconds.</description>
    </item>
    
    <item>
      <title>API and ABI versioning</title>
      <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/api-abi-versioning/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/api-abi-versioning/</guid>
      <description>API Versioning  We use semantic versioning. bsoncxx and mongocxx both define corresponding CMake variables for MAJOR, MINOR, and PATCH.  ABI Versioning  Both bsoncxx and mongocxx both have a single scalar ABI version. Only bump ABI version on incompatible ABI change (not for ABI additions). We stay on ABI version _noabi (without bumping for incompatible changes) until ABI is stable.  Parallel Header Installation  For mongocxx, install all headers to $PREFIX/mongocxx/v$ABI/.</description>
    </item>
    
    <item>
      <title>Configuring the mongocxx driver</title>
      <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/configuration/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/configuration/</guid>
      <description>Configuring the Driver In the mongocxx driver, most configuration is done via the connection URI. Some additional connection options are possible via the mongocxx::options::client class.
Configuring TLS/SSL To enable TLS (SSL), set ssl=true in the URI:
 mongodb://mongodb.example.com/?ssl=true
 By default, mongocxx will verify server certificates against the local system CA list. You can override that by creating a mongocxx::options::ssl object and passing it to ssl_opts on mongocxx::options::client.
For example, to use a custom CA or to disable certificate validation, uncomment the corresponding line in the following example:</description>
    </item>
    
    <item>
      <title>Installing the mongocxx driver</title>
      <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/installation/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/installation/</guid>
      <description>Installing the mongocxx driver Prerequisites  Any standard Unix platform, or Windows 7 SP1+ GCC 4.8.2+, Clang 3.5+, Apple Clang 5.1+, or Visual Studio C++ 2015 Update 1 or later CMake 3.2 or later On Windows, boost 1.56 or later  Installation Step 1: Install the latest version of the MongoDB C driver. The mongocxx driver builds on top of the MongoDB C driver.
 For mongocxx-3.1.x, libmongoc 1.5.0 or later is required.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/index/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/index/</guid>
      <description>The mongocxx is a ground-up rewrite of a C++ driver for MongoDB based on libmongoc. It requires a C++11 compiler. It it known to build on x86 and x86-64 architectures for Linux, Mac OS X, Windows, FreeBSD and Solaris.
The mongocxx driver library includes a matching bson package, bsoncxx, that implements the BSON specification (see http://www.bsonspec.org). This library can be used standalone for object serialization and deserialization even when one is not using MongoDB at all.</description>
    </item>
    
    <item>
      <title>Thread and fork safety</title>
      <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/thread-safety/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/thread-safety/</guid>
      <description>TLDR: Always give each thread its own mongocxx::client.
In general each mongocxx::client object AND all of its child objects should be used by a single thread at a time. This is true even for clients acquired from a mongocxx::pool.
Even if you create multiple child objects from a single client, and synchronize them individually, that is unsafe as they will concurrently modify internal structures of the client. The same is true if you copy a child object.</description>
    </item>
    
    <item>
      <title>Tutorial for mongocxx</title>
      <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/tutorial/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/tutorial/</guid>
      <description>Quick Start Prerequisites  A mongod instance running on localhost on port 27017.
 The mongocxx Driver. See Installation for mongocxx.
 The following statements at the top of your source file:
  #include &amp;lt;cstdint&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;bsoncxx/json.hpp&amp;gt; #include &amp;lt;mongocxx/client.hpp&amp;gt; #include &amp;lt;mongocxx/stdx.hpp&amp;gt; #include &amp;lt;mongocxx/uri.hpp&amp;gt; using bsoncxx::builder::stream::close_array; using bsoncxx::builder::stream::close_document; using bsoncxx::builder::stream::document; using bsoncxx::builder::stream::finalize; using bsoncxx::builder::stream::open_array; using bsoncxx::builder::stream::open_document;  Compiling The mongocxx driver&amp;rsquo;s installation process will install a libmongocxx.</description>
    </item>
    
    <item>
      <title>Working with BSON</title>
      <link>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/working-with-bson/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>https://mongodb.github.io/mongo-cxx-driver/mongocxx-v3/working-with-bson/</guid>
      <description>The mongocxx driver ships with a new library, bsoncxx. This article will go over some of the different types in this library, and how and when to use each. For more information and example code, see our examples.
 Document Builders Owning BSON Documents (values) Non-owning BSON Documents (views) Optionally-owning BSON Documents(view_or_value) BSON Document Lifetime Printing BSON Documents Getting Fields out of BSON Documents  Document Builders The bsoncxx library offers two different interfaces for building BSON, a basic builder and a stream-based builder.</description>
    </item>
    
  </channel>
</rss>